# Sliding window embedding function
def sliding_window(data, dim, tau):
    N = len(data) - (dim - 1) * tau  # Number of valid embedding points
    embedded_data = np.array([data[i:i + dim * tau:tau] for i in range(N)])
    return embedded_data

# Setting embedding parameters
embedding_dim = 3  # Convert 1D sine wave into a 3D space
time_lag = 5       # Time delay (τ)

# Creating 3D embedding
embedded_points = sliding_window(sine_wave, embedding_dim, time_lag)
x_vals, y_vals, z_vals = embedded_points[:, 0], embedded_points[:, 1], embedded_points[:, 2]

# Plotting the embedded point cloud
fig = plt.figure(figsize=(6, 6))
ax = fig.add_subplot(111, projection='3d')
ax.scatter(x_vals, y_vals, z_vals, c='b', marker='o', s=5)

ax.set_xlabel("X (t)")
ax.set_ylabel("Y (t+τ)")
ax.set_zlabel("Z (t+2τ)")
ax.set_title("Step 2: 3D Sliding Window Embedding")
plt.show()
